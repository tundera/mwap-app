module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: ['./tsconfig.json'],
    tsconfigRootDir: __dirname,
    ecmaVersion: 2020,
    sourceType: 'module',
    extraFileExtensions: ['.graphql', '.mdx'],
  },
  plugins: ['@typescript-eslint', 'cypress', 'jest', 'import'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:cypress/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:mdx/recommended',
    'prettier',
    'react-app',
  ],
  env: {
    es6: true,
    browser: true,
    commonjs: true,
    jest: true,
    node: true,
  },
  rules: {
    '@typescript-eslint/no-shadow': 'off',
    '@typescript-eslint/naming-convention': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-var-requires': 'off',
    'global-require': 'off',
    'consistent-return': 'off',
    'import/prefer-default-export': 'off',
    'import/no-useless-path-segments': 'off',
    'no-param-reassign': 'off',
    'react/prop-types': 'off',
    'react/no-unescaped-entities': 'warn',
    'react/display-name': 'off',
    'import/no-cycle': 'off',
    'no-multi-assign': 'off',
    'no-underscore-dangle': 'off',
    'no-nested-ternary': 'off',
    'import/imports-first': ['error', 'absolute-first'],
    'react/jsx-filename-extension': [
      1,
      {
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.mdx'],
      },
    ],
    'react/jsx-props-no-spreading': 'off',
    'react/jsx-uses-react': 'off',
    'react/react-in-jsx-scope': 'off',
    quotes: [
      2,
      'single',
      {
        avoidEscape: true,
      },
    ],
    semi: ['error', 'never'],
  },
  settings: {
    'import/parsers': {
      '@typescript-eslint/parser': ['.js', '.jsx', '.ts', '.tsx', '.mdx', '.json'],
    },
    'import/resolver': {
      'babel-module': {},
      typescript: {},
    },
    react: {
      version: 'detect',
    },
  },
}
